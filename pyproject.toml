[project]
name = "matchbox-db"
dynamic = ["version"]
description = "A framework for orchestrating and comparing data linking and deduplication methodologies."
authors = [{ name="Department for Business and Trade" }]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.11,<3.14"
dependencies = [
    "click>=8.1.7",
    "cryptography>=44.0.2",
    "duckdb>=1.1.1",
    "faker>=36.1.1",
    "frozendict>=2.4.6",
    "httpx>=0.28.0",
    "matplotlib>=3.9.2",
    "pandas>=2.2.3",
    "polars>=1.26.0,<1.32.0", # pinned due to this issue https://github.com/pola-rs/polars/issues/23965
    "polars-hash>=0.5.3",
    "psycopg[binary, pool]>=3.2.6",
    "pyarrow>=17.0.0",
    "pydantic-settings>=2.5.2",
    "pydantic>=2.9.2",
    "rich>=13.9.4",
    "rustworkx>=0.15.1",
    "splink>=4.0.5,<4.1.0",
    "sqlalchemy>=2.0.35",
    "sqlglot[rs]>=26.12.1",
    "textual>=0.87.1",
    "typer>=0.15.0",
    "plotext>=5.3.2",
]

[project.optional-dependencies]
server = [
    "adbc-driver-postgresql>=1.5.0",
    "alembic>=1.15.2",
    "boto3>=1.35.99",
    "fastapi[standard-no-fastapi-cloud-cli]>=0.116.0",
    "python-multipart>=0.0.18",
    "tomli>=2.0.1",
]

[dependency-groups]
dev = [
    "docker>=7.1.0",
    "griffe-inherited-docstrings>=1.1.1",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "mkdocs>=1.6.1",
    "mkdocs-autorefs>=1.3.0",
    "mkdocs-material>=9.5.50",
    "mkdocstrings[python]>=0.27.0",
    "moto[s3]>=5.0.26",
    "pre-commit>=3.8.0",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-env>=1.1.5",
    "respx>=0.22.0",
    "ruff>=0.9.0",
    "setuptools-scm>=8.3.1",
    "snakeviz>=2.2.2",
    "tomli-w>=1.1.0",
]
typing = [
    "boto3-stubs[s3]>=1.35.99",
    "pyarrow-stubs>=17.16",
]

[project.scripts]
matchbox = "matchbox.client.cli.main:app"

[project.urls]
"Documentation" = "https://uktrade.github.io/matchbox/"
"Repository" = "https://github.com/uktrade/matchbox.git"

[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

# Presence enables setuptools-scm
[tool.setuptools_scm]


[tool.uv]
default-groups = ["dev", "typing"]
package = true
upgrade-package = ["ruff"]
constraint-dependencies = [
    "urllib3>=2.5.0"
]

[tool.ruff]
exclude = [
    "*.ipynb"
]
line-length = 88
indent-width = 4
target-version = "py311"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "B",
    "D"
]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/{test,docs}/*" = ["D"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.pytest.ini_options]
testpaths = ["test"]
pythonpath = ["."]
addopts = "--cov=matchbox test/"
norecursedirs = "src"
log_cli = false  # Set to true to enable logs and individual tests
log_cli_level = "DEBUG"  # Set to "INFO" to see less detailed logging
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%X"
filterwarnings = [
    "ignore:.*TestkitDAG.*:pytest.PytestCollectionWarning",
    "ignore:.*__fields__.*:pydantic.PydanticDeprecatedSince20:unittest.mock",
    "ignore:.*__fields_set__.*:pydantic.PydanticDeprecatedSince20:unittest.mock",
    "ignore:.*model_fields.*:pydantic.PydanticDeprecatedSince211:unittest.mock",
    "ignore:.*model_computed_fields.*:pydantic.PydanticDeprecatedSince211:unittest.mock",
]
markers = [
    "docker: marks tests that require resources in Docker to be available",
]
